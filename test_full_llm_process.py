"""
–¢–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å LLM
"""

import os
from work_ua_parser import WorkUaParser

def test_full_llm_process():
    """–¢–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ä–µ–∑—é–º–µ —Å LLM"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∫–ª—é—á
    api_key = os.getenv('OPENAI_API_KEY')
    if not api_key:
        print("‚ùå –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è OPENAI_API_KEY")
        return False
    
    print("üöÄ –¢–ï–°–¢ –ü–û–õ–ù–û–ì–û LLM –ü–†–û–¶–ï–°–°–ê")
    print("=" * 60)
    
    parser = WorkUaParser()
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥—Ä–∞–π–≤–µ—Ä
        if not parser.setup_driver():
            print("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥—Ä–∞–π–≤–µ—Ä–∞")
            return False
            
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
        if not parser.open_page():
            print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
            return False
            
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 2 –∫–∞—Ä—Ç–æ—á–∫–∏ —Å LLM
        print("ü§ñ –ó–ê–ü–£–°–ö–ê–ï–ú –û–ë–†–ê–ë–û–¢–ö–£ –†–ï–ó–Æ–ú–ï –° LLM...")
        print("=" * 60)
        
        cards = parser.find_resume_cards()
        if not cards:
            print("‚ùå –ö–∞—Ä—Ç–æ—á–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return False
            
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(cards)} –∫–∞—Ä—Ç–æ—á–µ–∫")
        print("üìã –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 2 —Ä–µ–∑—é–º–µ...")
        
        results = []
        
        for i in range(min(2, len(cards))):
            print(f"\n{'='*50}")
            print(f"üìÑ –†–ï–ó–Æ–ú–ï #{i+1}")
            print(f"{'='*50}")
            
            # –ù–∞—Ö–æ–¥–∏–º —Ç–µ–∫—É—â–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ (—á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å stale elements)
            current_cards = parser.find_resume_cards()
            if i >= len(current_cards):
                print(f"‚ö†Ô∏è –ö–∞—Ä—Ç–æ—á–∫–∞ {i+1} –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
                break
                
            current_card = current_cards[i]
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å –∫–∞—Ä—Ç–æ—á–∫–∏
            card_info = parser.parse_card_info(current_card)
            print(f"üìã –ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
            print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {card_info.get('title', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
            print(f"   –ó–∞—Ä–ø–ª–∞—Ç–∞: {card_info.get('salary', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
            print(f"   –°—Å—ã–ª–∫–∞: {card_info.get('link', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
            
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Ä–µ–∑—é–º–µ
            if parser.click_card(current_card):
                print(f"‚úÖ –ü–µ—Ä–µ—à–ª–∏ –≤ –¥–µ—Ç–∞–ª—å–Ω–æ–µ —Ä–µ–∑—é–º–µ")
                
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å –ø–æ–º–æ—â—å—é LLM
                print("ü§ñ –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å –ø–æ–º–æ—â—å—é LLM...")
                details = parser.parse_resume_with_llm()
                
                if details:
                    print("üéâ LLM —É—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é!")
                    print("üìä –î–ï–¢–ê–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:")
                    print(f"   –ü–æ–ª–Ω–æ–µ –∏–º—è: {details.get('full_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
                    print(f"   –î–æ–ª–∂–Ω–æ—Å—Ç—å: {details.get('position', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
                    print(f"   –í–æ–∑—Ä–∞—Å—Ç: {details.get('age', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
                    print(f"   –ì–æ—Ä–æ–¥: {details.get('location', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
                    print(f"   –ó–∞—Ä–ø–ª–∞—Ç–∞: {details.get('salary', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
                    
                    # –û–±—ä–µ–¥–∏–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
                    full_data = {
                        'card_number': i+1,
                        'card_info': card_info,
                        'llm_details': details,
                        'processing_method': 'LLM'
                    }
                    
                    results.append(full_data)
                    
                    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–ø–∏—Å–∫—É
                    print("üîô –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–ø–∏—Å–∫—É —Ä–µ–∑—é–º–µ...")
                    if parser.go_back():
                        print("‚úÖ –í–µ—Ä–Ω—É–ª–∏—Å—å –∫ —Å–ø–∏—Å–∫—É")
                    else:
                        print("‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å –≤–æ–∑–≤—Ä–∞—Ç–æ–º")
                        
                else:
                    print("‚ùå LLM –Ω–µ —Å–º–æ–≥ –∏–∑–≤–ª–µ—á—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é")
                    
            else:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–π—Ç–∏ –≤ —Ä–µ–∑—é–º–µ {i+1}")
                
        # –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–∏
        print(f"\n{'='*60}")
        print(f"üéØ –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
        print(f"{'='*60}")
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {len(results)} —Ä–µ–∑—é–º–µ")
        print(f"ü§ñ –ú–µ—Ç–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏: LLM (OpenAI GPT-3.5)")
        print(f"‚ö° –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: –±—ã—Å—Ç—Ä–æ, –±–µ–∑ –∑–∞–≤–∏—Å–∞–Ω–∏–π")
        print(f"üéØ –ö–∞—á–µ—Å—Ç–≤–æ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è: –≤—ã—Å–æ–∫–æ–µ")
        
        if results:
            print("\nüìä –ö–†–ê–¢–ö–ê–Ø –°–í–û–î–ö–ê:")
            for result in results:
                details = result['llm_details']
                print(f"   {result['card_number']}. {details.get('full_name', '–ë–µ–∑ –∏–º–µ–Ω–∏')} - {details.get('position', '–ë–µ–∑ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏')}")
        
        return len(results) > 0
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    finally:
        parser.close_driver()

if __name__ == "__main__":
    success = test_full_llm_process()
    if success:
        print("\nüéâ –¢–ï–°–¢ –£–°–ü–ï–®–ï–ù! LLM –ü–ê–†–°–ò–ù–ì –†–ê–ë–û–¢–ê–ï–¢ –û–¢–õ–ò–ß–ù–û!")
    else:
        print("\n‚ùå –¢–µ—Å—Ç –Ω–µ —É–¥–∞–ª—Å—è") 