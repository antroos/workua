#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π HTTP —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Ä–µ–∑—é–º–µ
"""

import http.server
import socketserver
import webbrowser
import os
import sys
import threading
import time

class CustomHTTPRequestHandler(http.server.SimpleHTTPRequestHandler):
    """–ö–∞—Å—Ç–æ–º–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å CORS –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏"""
    
    def end_headers(self):
        # –î–æ–±–∞–≤–ª—è–µ–º CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏
        self.send_header('Access-Control-Allow-Origin', '*')
        self.send_header('Access-Control-Allow-Methods', 'GET, POST, OPTIONS')
        self.send_header('Access-Control-Allow-Headers', '*')
        super().end_headers()
    
    def log_message(self, format, *args):
        """–ë–æ–ª–µ–µ –∫—Ä–∞—Å–∏–≤–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ"""
        print(f"üì° {self.address_string()} - {format % args}")

def start_server(port=8000):
    """–ó–∞–ø—É—Å–∫ HTTP —Å–µ—Ä–≤–µ—Ä–∞"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω—É–∂–Ω—ã–µ —Ñ–∞–π–ª—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç
    required_files = [
        'view_database.html',
        'resume_data_20250731_190906.json'
    ]
    
    missing_files = [f for f in required_files if not os.path.exists(f)]
    if missing_files:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã: {', '.join(missing_files)}")
        return False
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–µ—Ä
        with socketserver.TCPServer(("", port), CustomHTTPRequestHandler) as httpd:
            print(f"üåê –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä...")
            print(f"üì° –ê–¥—Ä–µ—Å: http://localhost:{port}")
            print(f"üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞: http://localhost:{port}/view_database.html")
            print(f"üíæ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {os.path.getsize('resume_data_20250731_190906.json')} –±–∞–π—Ç")
            print()
            print(f"üîó –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ: http://localhost:{port}/view_database.html")
            print(f"‚èπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
            print("="*60)
            
            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
            def open_browser():
                time.sleep(2)
                try:
                    webbrowser.open(f'http://localhost:{port}/view_database.html')
                    print(f"üåê –ë—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä—ã—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
                except:
                    print(f"‚ÑπÔ∏è  –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –≤—Ä—É—á–Ω—É—é")
            
            browser_thread = threading.Thread(target=open_browser)
            browser_thread.daemon = True
            browser_thread.start()
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
            httpd.serve_forever()
            
    except KeyboardInterrupt:
        print(f"\nüëã –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return True
    except OSError as e:
        if "Address already in use" in str(e):
            print(f"‚ùå –ü–æ—Ä—Ç {port} —É–∂–µ –∑–∞–Ω—è—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –ø–æ—Ä—Ç:")
            print(f"   python start_viewer.py {port + 1}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

def show_stats():
    """–ü–æ–∫–∞–∑–∞—Ç—å –∫—Ä–∞—Ç–∫—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
    try:
        import json
        with open('resume_data_20250731_190906.json', 'r', encoding='utf-8') as f:
            data = json.load(f)
        
        quality_count = sum(1 for item in data if item.get('resume_data', {}).get('detailed_info'))
        
        print("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•:")
        print(f"   üìö –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {len(data)}")
        print(f"   ‚úÖ –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö: {quality_count}")
        print(f"   üíæ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {os.path.getsize('resume_data_20250731_190906.json')} –±–∞–π—Ç")
        print()
        
    except Exception as e:
        print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É: {e}")

if __name__ == "__main__":
    print("üóÇÔ∏è  –í–ï–ë–û–†–©–ò–¶–ê –ë–ê–ó–´ –î–ê–ù–ù–´–• –†–ï–ó–Æ–ú–ï")
    print("="*40)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    show_stats()
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ—Ä—Ç
    port = 8000
    if len(sys.argv) > 1:
        try:
            port = int(sys.argv[1])
        except ValueError:
            print(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–æ—Ä—Ç: {sys.argv[1]}. –ò—Å–ø–æ–ª—å–∑—É–µ–º 8000")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    success = start_server(port)
    
    if not success:
        print("\nüí° –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–ï –°–ü–û–°–û–ë–´:")
        print("1. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –ø–æ—Ä—Ç: python start_viewer.py 8001")
        print("2. –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª view_database.html –Ω–∞–ø—Ä—è–º—É—é –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ —Ñ–∞–π–ª—ã resume_data_20250731_190906.json –∏ view_database.html —Å—É—â–µ—Å—Ç–≤—É—é—Ç") 